{"version":3,"sources":["context/NavContext.js","nav/NavLink.js","nav/navLinks.js","nav/Nav.js","customHooks/useNav.js","customHooks/useOnScreen.js","pages/About.js","pages/Contact.js","pages/Home.js","pages/Main.js","App.js","index.js"],"names":["NavContext","React","createContext","NavProvider","children","useState","providerValue","activeNavLinkId","setActiveNavLinkId","Provider","value","NavLink","navLinkId","scrollToId","useContext","id","className","onClick","document","getElementById","scrollIntoView","behavior","navLinks","Nav","map","idx","useNav","ref","useRef","isOnScreen","setOnScreen","observer","IntersectionObserver","entry","isIntersecting","threshold","useEffect","observe","current","disconnect","useOnScreen","About","aboutRef","src","alt","Contact","contactRef","Home","homeRef","Main","App","ReactDOM","render","StrictMode"],"mappings":"yQAEaA,EAAaC,IAAMC,gBAejBC,EAbK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACSC,mBAAS,IADlB,mBAG/BC,EAAgB,CACrBC,gBAJoC,KAKpCC,mBALoC,MAQrC,OACC,cAACR,EAAWS,SAAZ,CAAqBC,MAAOJ,EAA5B,SAA4CF,KCS/BO,EAnBC,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WAAiB,EACEC,qBAAWd,GAAnDO,EADsC,EACtCA,gBAAiBC,EADqB,EACrBA,mBAOzB,OACC,sBACCO,GAAIH,EACJI,UAAWT,IAAoBK,EAAY,cAAgB,GAC3DK,QATkB,WACnBT,EAAmBI,GACnBM,SAASC,eAAeN,GAAYO,eAAe,CAAEC,SAAU,YAI/D,SAKET,KCjBSU,EAAW,CACvB,CAAEV,UAAW,OAAQC,WAAY,iBACjC,CAAED,UAAW,QAASC,WAAY,kBAClC,CAAED,UAAW,UAAWC,WAAY,qBCYtBU,G,MAVH,WACX,OACC,8BACED,EAASE,KAAI,WAA4BC,GAA5B,IAAGb,EAAH,EAAGA,UAAWC,EAAd,EAAcA,WAAd,OACb,cAAC,EAAD,CAAmBD,UAAWA,EAAWC,WAAYA,GAAvCY,UCLLC,EAAS,SAAAd,GACrB,IAAMe,EAAMC,iBAAO,MAEXpB,EAAuBM,qBAAWd,GAAlCQ,mBAEFqB,ECPoB,SAAAF,GAAQ,IAAD,EACCtB,oBAAS,GADV,mBAC1BwB,EAD0B,KACdC,EADc,KAG3BC,EAAW,IAAIC,sBACpB,gBAAEC,EAAF,2BAAaH,EAAYG,EAAMC,kBAC/B,CACCC,UAAW,CAAC,IAAM,GAAK,OAWzB,OAPAC,qBAAU,WAET,OADAL,EAASM,QAAQV,EAAIW,SACd,WACNP,EAASQ,iBAIJV,EDVYW,CAAYb,GAQ/B,OANAS,qBAAU,WACLP,GACHrB,EAAmBI,KAElB,CAACiB,EAAYrB,EAAoBI,IAE7Be,GESOc,G,KAtBD,WAMb,IAAMC,EAAWhB,EAAO,SAExB,OACC,0BAASC,IAAKe,EAAU3B,GAAG,iBAA3B,UACC,qBACC4B,IAAI,2DACJC,IAAI,iBAEL,gCACC,uCACA,kECMWC,EAtBC,WAMf,IAAMC,EAAapB,EAAO,WAE1B,OACC,0BAASC,IAAKmB,EAAY/B,GAAG,mBAA7B,UACC,qBACC4B,IAAI,2DACJC,IAAI,iBAEL,gCACC,yCACA,mECMWG,EAtBF,WAMZ,IAAMC,EAAUtB,EAAO,QAEvB,OACC,0BAASC,IAAKqB,EAASjC,GAAG,gBAA1B,UACC,qBACC4B,IAAI,2DACJC,IAAI,iBAEL,gCACC,sCACA,gECTWK,EARF,kBACZ,iCACC,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,Q,MCSaC,MAXf,WACC,OACC,qBAAKlC,UAAU,eAAf,SACC,eAAC,EAAD,WACC,cAAC,EAAD,IACA,cAAC,EAAD,UCLJmC,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDnC,SAASC,eAAe,W","file":"static/js/main.feb78ec1.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nexport const NavContext = React.createContext();\n\nconst NavProvider = ({ children }) => {\n\tconst [activeNavLinkId, setActiveNavLinkId] = useState('');\n\n\tconst providerValue = {\n\t\tactiveNavLinkId,\n\t\tsetActiveNavLinkId,\n\t};\n\n\treturn (\n\t\t<NavContext.Provider value={providerValue}>{children}</NavContext.Provider>\n\t);\n};\n\nexport default NavProvider;\n","import React, { useContext } from 'react';\nimport { NavContext } from '../context/NavContext';\n\nconst NavLink = ({ navLinkId, scrollToId }) => {\n\tconst { activeNavLinkId, setActiveNavLinkId } = useContext(NavContext);\n\n\tconst handleClick = () => {\n\t\tsetActiveNavLinkId(navLinkId);\n\t\tdocument.getElementById(scrollToId).scrollIntoView({ behavior: 'smooth' });\n\t};\n\n\treturn (\n\t\t<span\n\t\t\tid={navLinkId}\n\t\t\tclassName={activeNavLinkId === navLinkId ? 'activeClass' : ''}\n\t\t\tonClick={handleClick}\n\t\t>\n\t\t\t{navLinkId}\n\t\t</span>\n\t);\n};\n\nexport default NavLink;\n","export const navLinks = [\n\t{ navLinkId: 'Home', scrollToId: 'homeContainer' },\n\t{ navLinkId: 'About', scrollToId: 'aboutContainer' },\n\t{ navLinkId: 'Contact', scrollToId: 'contactContainer' },\n];\n","import React from 'react';\nimport NavLink from './NavLink';\nimport { navLinks } from './navLinks';\nimport './Nav.css';\n\nconst Nav = () => {\n\treturn (\n\t\t<nav>\n\t\t\t{navLinks.map(({ navLinkId, scrollToId }, idx) => (\n\t\t\t\t<NavLink key={idx} navLinkId={navLinkId} scrollToId={scrollToId} />\n\t\t\t))}\n\t\t</nav>\n\t);\n};\n\nexport default Nav;\n","import { useRef, useContext, useEffect } from 'react';\nimport { useOnScreen } from './useOnScreen';\nimport { NavContext } from '../context/NavContext';\n\nexport const useNav = navLinkId => {\n\tconst ref = useRef(null);\n\n\tconst { setActiveNavLinkId } = useContext(NavContext);\n\n\tconst isOnScreen = useOnScreen(ref);\n\n\tuseEffect(() => {\n\t\tif (isOnScreen) {\n\t\t\tsetActiveNavLinkId(navLinkId);\n\t\t}\n\t}, [isOnScreen, setActiveNavLinkId, navLinkId]);\n\n\treturn ref;\n};\n","import { useState, useEffect } from 'react';\n\nexport const useOnScreen = ref => {\n\tconst [isOnScreen, setOnScreen] = useState(false);\n\n\tconst observer = new IntersectionObserver(\n\t\t([entry]) => setOnScreen(entry.isIntersecting),\n\t\t{\n\t\t\tthreshold: [0.25, 0.5, 0.75],\n\t\t}\n\t);\n\n\tuseEffect(() => {\n\t\tobserver.observe(ref.current);\n\t\treturn () => {\n\t\t\tobserver.disconnect();\n\t\t};\n\t});\n\n\treturn isOnScreen;\n};\n","import React from 'react';\nimport { useNav } from '../customHooks/useNav';\nimport './Page.css';\n\nconst About = () => {\n\t// useNav takes in a navLinkId and returns a ref\n\t// this ref is used to register the navLinkId that's\n\t// currently in view, and apply activeClass styling\n\t// to the corresponding nav childElement\n\n\tconst aboutRef = useNav('About');\n\n\treturn (\n\t\t<section ref={aboutRef} id='aboutContainer'>\n\t\t\t<img\n\t\t\t\tsrc='https://source.unsplash.com/random/600x600/?nature,water'\n\t\t\t\talt='unsplash-img'\n\t\t\t/>\n\t\t\t<div>\n\t\t\t\t<h3>ABOUT</h3>\n\t\t\t\t<p>This is the about section</p>\n\t\t\t</div>\n\t\t</section>\n\t);\n};\n\nexport default About;\n","import React from 'react';\nimport { useNav } from '../customHooks/useNav';\nimport './Page.css';\n\nconst Contact = () => {\n\t// useNav takes in a navLinkId and returns a ref\n\t// this ref is used to register the navLinkId that's\n\t// currently in view, and apply activeClass styling\n\t// to the corresponding nav childElement\n\n\tconst contactRef = useNav('Contact');\n\n\treturn (\n\t\t<section ref={contactRef} id='contactContainer'>\n\t\t\t<img\n\t\t\t\tsrc='https://source.unsplash.com/random/600x600/?nature,water'\n\t\t\t\talt='unsplash-img'\n\t\t\t/>\n\t\t\t<div>\n\t\t\t\t<h3>CONTACT</h3>\n\t\t\t\t<p>This is the contact section</p>\n\t\t\t</div>\n\t\t</section>\n\t);\n};\n\nexport default Contact;\n","import React from 'react';\nimport { useNav } from '../customHooks/useNav';\nimport './Page.css';\n\nconst Home = () => {\n\t// useNav takes in a navLinkId and returns a ref\n\t// this ref is used to register the navLinkId that's\n\t// currently in view, and apply activeClass styling\n\t// to the corresponding nav childElement\n\n\tconst homeRef = useNav('Home');\n\n\treturn (\n\t\t<section ref={homeRef} id='homeContainer'>\n\t\t\t<img\n\t\t\t\tsrc='https://source.unsplash.com/random/600x600/?nature,water'\n\t\t\t\talt='unsplash-img'\n\t\t\t/>\n\t\t\t<div>\n\t\t\t\t<h3>HOME</h3>\n\t\t\t\t<p>This is the home section</p>\n\t\t\t</div>\n\t\t</section>\n\t);\n};\n\nexport default Home;\n","import React from 'react';\nimport { Home, About, Contact } from './';\n\nconst Main = () => (\n\t<main>\n\t\t<Home />\n\t\t<About />\n\t\t<Contact />\n\t</main>\n);\n\nexport default Main;\n","import { Nav } from './nav';\nimport { Main } from './pages';\nimport NavProvider from './context/NavContext';\nimport './App.css';\n\nfunction App() {\n\treturn (\n\t\t<div className='appContainer'>\n\t\t\t<NavProvider>\n\t\t\t\t<Nav />\n\t\t\t\t<Main />\n\t\t\t</NavProvider>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}